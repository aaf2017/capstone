[{"C:\\workspaceQS\\capstone7\\client\\src\\index.js":"1","C:\\workspaceQS\\capstone7\\client\\src\\App.js":"2","C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Posts.js":"3","C:\\workspaceQS\\capstone7\\client\\src\\components\\Forms\\FormQ.js":"4","C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\workspaceQS\\capstone7\\client\\src\\styles.js":"6","C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\styles.js":"7","C:\\workspaceQS\\capstone7\\client\\src\\components\\Forms\\styles.js":"8","C:\\workspaceQS\\capstone7\\client\\src\\reducers\\index.js":"9","C:\\workspaceQS\\capstone7\\client\\src\\reducers\\posts.js":"10","C:\\workspaceQS\\capstone7\\client\\src\\actions\\posts.js":"11","C:\\workspaceQS\\capstone7\\client\\src\\api\\index.js":"12","C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Post\\styles.js":"13","C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Header\\Header.js":"14","C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Header\\styles.js":"15","C:\\workspaceQS\\capstone7\\client\\src\\components\\Home\\Home.js":"16","C:\\workspaceQS\\capstone7\\client\\src\\components\\Auth\\Auth.js":"17","C:\\workspaceQS\\capstone7\\client\\src\\components\\Home\\styles.js":"18","C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Drawer\\Drawer.js":"19","C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Drawer\\styles.js":"20","C:\\workspaceQS\\capstone7\\client\\src\\components\\Auth\\styles.js":"21"},{"size":468,"mtime":1610958703648,"results":"22","hashOfConfig":"23"},{"size":810,"mtime":1611015870234,"results":"24","hashOfConfig":"23"},{"size":1050,"mtime":1610906804451,"results":"25","hashOfConfig":"23"},{"size":4301,"mtime":1610914391591,"results":"26","hashOfConfig":"23"},{"size":2983,"mtime":1610918616541,"results":"27","hashOfConfig":"23"},{"size":1481,"mtime":1610921393894,"results":"28","hashOfConfig":"23"},{"size":898,"mtime":1610853465947,"results":"29","hashOfConfig":"23"},{"size":1951,"mtime":1610987687212,"results":"30","hashOfConfig":"23"},{"size":121,"mtime":1610732981203,"results":"31","hashOfConfig":"23"},{"size":523,"mtime":1610918499221,"results":"32","hashOfConfig":"23"},{"size":1408,"mtime":1610918411106,"results":"33","hashOfConfig":"23"},{"size":421,"mtime":1610918254361,"results":"34","hashOfConfig":"23"},{"size":1231,"mtime":1610866159917,"results":"35","hashOfConfig":"23"},{"size":5724,"mtime":1611020031525,"results":"36","hashOfConfig":"23"},{"size":2299,"mtime":1611013682187,"results":"37","hashOfConfig":"23"},{"size":1175,"mtime":1610987327785,"results":"38","hashOfConfig":"23"},{"size":1784,"mtime":1611018558508,"results":"39","hashOfConfig":"23"},{"size":146,"mtime":1610987581494,"results":"40","hashOfConfig":"23"},{"size":1382,"mtime":1611014732682,"results":"41","hashOfConfig":"23"},{"size":788,"mtime":1611015627235,"results":"42","hashOfConfig":"23"},{"size":0,"mtime":1610958219919,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tvc8pd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\workspaceQS\\capstone7\\client\\src\\index.js",[],["94","95"],"C:\\workspaceQS\\capstone7\\client\\src\\App.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Posts.js",["96"],"import React from 'react';\r\nimport { Grid, CircularProgress, Typography, Container, Divider } from '@material-ui/core';\r\n//import { DataGrid } from '@material-ui/data-grid';\r\nimport { useSelector } from 'react-redux';\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = (/*{ setCurrentId }*/) => {\r\n  const posts = useSelector(state => state.posts);\r\n  const classes = useStyles();\r\n\r\n  console.log(posts);\r\n\r\n  return (\r\n    !posts.length ? <CircularProgress /> : (\r\n    <React.Fragment>\r\n        <Container>\r\n          <Typography variant=\"h5\" className={classes.boardHeader}>Discussion Board</Typography>\r\n        </Container> \r\n\r\n        {posts.map((post, idx) => (\r\n          <Container key={post._id} container alignItems=\"center\" height=\"auto\" direction=\"row\" spacing={1} item xs={12} sm={12}>\r\n            <Post post={post} key={idx} /*setCurrentId={setCurrentId}*//>\r\n            <Divider />\r\n          </Container>       \r\n        ))}        \r\n    </React.Fragment>\r\n    )\r\n  );\r\n};\r\nexport default Posts;\r\n","C:\\workspaceQS\\capstone7\\client\\src\\components\\Forms\\FormQ.js",["97","98","99","100"],"import React, { useState, useEffect } from 'react';\r\nimport { /*useSelector,*/ useDispatch } from 'react-redux';\r\nimport { TextField, Button, Typography, Paper, TextareaAutosize } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost/*, updatePost */} from '../../actions/posts';\r\n\r\n//GET CURRENT POST ID ??\r\n\r\nconst FormQ = (/*{ currentId, setCurrentId }*/) => {\r\n  const [postData, setPostData] = useState({\r\n    user_fname: '',\r\n    category: '',\r\n    question: '', \r\n  });\r\n\r\n  //const post = useSelector((state) => currentId ? state.posts.find(p) => p._id === currentId) : null);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /*useEffect(() => {\r\n    if(post) setPostData(post); \r\n  }, [post])*/\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); //to prevent refresh in the browser\r\n\r\n    /*if(currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {*/\r\n      dispatch(createPost(postData));\r\n      //clear();\r\n    }\r\n    \r\n /* };*/\r\n\r\n  const clear = () => {\r\n    \r\n  }\r\n\r\n  /*const clear = () => {\r\n      setCurrentId(null);\r\n      setPostData({ user_fname: '', category: '', question: '' });*/ \r\n\r\n  return (\r\n    <Paper className={classes.paper} item xs={12}>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant='h6' className={classes.formQheader}>Ask Your Question</Typography> \r\n\r\n\r\n        <TextField\r\n          name='user_fname'\r\n          variant='outlined'\r\n          label='First Name'\r\n          fullWidth\r\n          value={postData.user_fname}\r\n          onChange={e =>\r\n            setPostData({ ...postData, user_fname: e.target.value })\r\n          }\r\n        />\r\n\r\n        <FormControl variant='outlined' className={classes.formControl}>\r\n          <InputLabel\r\n            id='demo-simple-select-outlined-label'\r\n            name='category'\r\n            variant='outlined'\r\n            label='Discussion Category'\r\n            fullWidth\r\n          >\r\n            Discussion Category\r\n          </InputLabel>\r\n\r\n          <Select\r\n            labelId='demo-simple-select-outlined-label'\r\n            id='demo-simple-select-outlined'\r\n            value={postData.category}\r\n            onChange={e => {\r\n              console.log(e.target);\r\n              setPostData({ ...postData, category: e.target.value });\r\n            }}\r\n            label='Discussion Category'\r\n          >\r\n            <MenuItem value=''>\r\n              <em>Discussion Category</em>\r\n            </MenuItem>\r\n            <MenuItem value='Repertoire'>Repertoire</MenuItem>\r\n            <MenuItem value='Memorization'>Memorization</MenuItem>\r\n            <MenuItem value='Role Preparation'>Role Preparation</MenuItem>\r\n            <MenuItem value='Lyric Diction'>Lyric Diction</MenuItem>\r\n            <MenuItem value='Audition Etiquette'>Audition Etiquette</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          id=\"outlined-textarea\"\r\n          className={classes.questionArea}\r\n          rowsMin={3} \r\n          placeholder=\"Question\"\r\n          name='question'\r\n          variant='outlined'\r\n          label='Question'\r\n          multiline\r\n          fullWidth\r\n          value={postData.question}\r\n          onChange={e => setPostData({ ...postData, question: e.target.value })}\r\n        />\r\n\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant='contained'\r\n          size='large'\r\n          type='submit'\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n\r\n        <Button\r\n          className={classes.buttonClear}\r\n          variant='contained'\r\n          color='secondary'\r\n          size='large'\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default FormQ;\r\n","C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Post\\Post.js",["101","102","103","104","105","106","107","108","109","110"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Divider, Grid, Button, ButtonGroup, Typography, Card, CardHeader, CardContent, CardActions, Collapse, IconButton } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\n//import InsertCommentIcon from '@material-ui/icons/InsertComment';\r\n//import ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport AddCommentOutlinedIcon from '@material-ui/icons/AddCommentOutlined';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n//import { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post/*, setCurrentId*/ }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  console.log(post);\r\n  return (\r\n    <React.Fragment>\r\n    \r\n    <Box\r\n      className={classes.boxThree}\r\n      component='span'\r\n      display='block'\r\n      p={1}\r\n    >\r\n      <Grid style={{ width: '100%' }} className={classes.nameGrid}> \r\n        <Typography variant='body1' className={classes.name}>{post.user_fname}</Typography>\r\n        <Typography variant='body2'>\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid style={{ width: '100%' }} className={classes.questionGrid}>\r\n        <Typography className={classes.question} variant='body1' gutterBottom>\r\n          {post.question}\r\n        </Typography>\r\n        <Typography className={classes.question} variant='body2' color=\"textSecondary\" gutterBottom>\r\n          {post.category}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid>\r\n\r\n        <Button \r\n          className={classes.actions} \r\n          style={{color: '#e40475'}} \r\n          size=\"small\" \r\n          onClick={() => {}}/*or: onClick={() => setCurrentId(post._id)} */>  \r\n          \r\n          <MoreHorizIcon fontSize=\"default\" />\r\n\r\n        </Button>\r\n        <br/>\r\n        <Button size='small' onClick={() =>/*dispatch(deletePost(post._id)) */  {}} className={classes.actions}>\r\n          <DeleteOutlineIcon fontSize='small' variant=\"body2\" className={classes.deleteOutlineIcon}/>\r\n        </Button>\r\n\r\n      </Grid>\r\n\r\n        <Grid>\r\n          <Button size='small' onClick={() => /*dispatch(deletePost(post._id)) */{}} className={classes.actions}>\r\n            <ThumbUpAltIcon fontSize='small' variant=\"body2\" className={classes.likeIcon}/>\r\n            {post.likeCount}\r\n          </Button>\r\n          <br/>\r\n          <Button size='small' onClick={() => {}} className={classes.actions}>\r\n            <QuestionAnswerIcon fontSize='small' variant=\"body2\" className={classes.questionAnswerIcon}/>\r\n          </Button>\r\n        </Grid>\r\n    </Box>\r\n\r\n    </React.Fragment>\r\n    \r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n\r\n","C:\\workspaceQS\\capstone7\\client\\src\\styles.js",[],["111","112"],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\styles.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Forms\\styles.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\reducers\\index.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\reducers\\posts.js",["113"],"export default (posts = [], action) => {\r\n    switch (action.type) {\r\n        /*\r\n        case 'DELETE':\r\n            return posts.filter((post) => post._id =≠= action.payload);\r\n        case 'LIKE':\r\n        case 'UPDATE':\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);*/\r\n        case 'FETCH_ALL':\r\n            return action.payload;\r\n        case 'CREATE':\r\n            return [...posts, action.payload];        \r\n        default:\r\n            return posts;\r\n    }\r\n}","C:\\workspaceQS\\capstone7\\client\\src\\actions\\posts.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\api\\index.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Posts\\Post\\styles.js",["114"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  \r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  boxThree: {\r\n    display: 'flex',\r\n    flexDirection: 'block',\r\n    //justifyContent: 'space-between',\r\n    borderRadius: '5px',\r\n    height: 'auto',\r\n    position: 'relative',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  margin: '20px',\r\n  },\r\n  actions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    //color: \"#e40475\",\r\n    color: \"#48e0e4\",\r\n    padding: 0,\r\n    \"&:hover\": {\r\n        backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  buttons: {\r\n    //color: \"#e40475\",\r\n    color: \"#48e0e4\",\r\n    size: \"5px\",\r\n    padding: 0,\r\n    \"&:hover\": {\r\n        backgroundColor: \"transparent\"\r\n    }    \r\n  },\r\n  questionGrid: {\r\n    marginLeft: 0,\r\n  },\r\n  nameGrid: {\r\n    margin: 0,\r\n    padding: '0 16px',\r\n    maxWidth: \"120px\"\r\n  },\r\n  name: {\r\n    //fontFamily: \"Felipa, cursive\",\r\n    fontWeight: \"600\"\r\n  },\r\n});","C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Header\\Header.js",["115","116","117","118","119","120","121"],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Header\\styles.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Home\\Home.js",["122"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Container, Grow, Grid } from '@material-ui/core';\r\nimport { getPosts } from '../../actions/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport FormQ from '../Forms/FormQ';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Home = () => {\r\n     //const [currentId, setCurrentId] = useState(null);\r\n     const classes = useStyles();\r\n     const dispatch = useDispatch();\r\n \r\n     useEffect(() => {\r\n         dispatch(getPosts());\r\n     }, [/*currentId,*/dispatch]);\r\n     return(\r\n        <Grow in>\r\n            <Container className={classes.appBody}>  \r\n                <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={9}>\r\n                    <Posts /*setCurrentId={setCurrentId}*//>\r\n                    </Grid>\r\n                    <Grid gutterItem xs={12} sm={3}>\r\n                        <FormQ /*currentId={currentId} setCurrentId={setCurrentId}*//>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Grow>\r\n                \r\n    );\r\n}\r\n\r\nexport default Home;","C:\\workspaceQS\\capstone7\\client\\src\\components\\Auth\\Auth.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Home\\styles.js",[],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Drawer\\Drawer.js",["123","124"],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Nav\\Drawer\\styles.js",["125"],"C:\\workspaceQS\\capstone7\\client\\src\\components\\Auth\\styles.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"135","line":3,"column":48,"nodeType":"132","messageId":"133","endLine":3,"endColumn":64},{"ruleId":"130","severity":1,"message":"136","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":20},{"ruleId":"130","severity":1,"message":"137","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":22},{"ruleId":"130","severity":1,"message":"138","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"139","line":3,"column":33,"nodeType":"132","messageId":"133","endLine":3,"endColumn":44},{"ruleId":"130","severity":1,"message":"140","line":3,"column":58,"nodeType":"132","messageId":"133","endLine":3,"endColumn":62},{"ruleId":"130","severity":1,"message":"141","line":3,"column":64,"nodeType":"132","messageId":"133","endLine":3,"endColumn":74},{"ruleId":"130","severity":1,"message":"142","line":3,"column":76,"nodeType":"132","messageId":"133","endLine":3,"endColumn":87},{"ruleId":"130","severity":1,"message":"143","line":3,"column":89,"nodeType":"132","messageId":"133","endLine":3,"endColumn":100},{"ruleId":"130","severity":1,"message":"144","line":3,"column":102,"nodeType":"132","messageId":"133","endLine":3,"endColumn":110},{"ruleId":"130","severity":1,"message":"145","line":3,"column":112,"nodeType":"132","messageId":"133","endLine":3,"endColumn":122},{"ruleId":"130","severity":1,"message":"146","line":10,"column":8,"nodeType":"132","messageId":"133","endLine":10,"endColumn":30},{"ruleId":"130","severity":1,"message":"147","line":17,"column":9,"nodeType":"132","messageId":"133","endLine":17,"endColumn":17},{"ruleId":"126","replacedBy":"148"},{"ruleId":"128","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","endLine":16,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":33,"column":5,"nodeType":"155","messageId":"156","endLine":33,"endColumn":12},{"ruleId":"130","severity":1,"message":"157","line":11,"column":3,"nodeType":"132","messageId":"133","endLine":11,"endColumn":7},{"ruleId":"130","severity":1,"message":"131","line":12,"column":3,"nodeType":"132","messageId":"133","endLine":12,"endColumn":7},{"ruleId":"130","severity":1,"message":"158","line":15,"column":3,"nodeType":"132","messageId":"133","endLine":15,"endColumn":7},{"ruleId":"130","severity":1,"message":"159","line":16,"column":3,"nodeType":"132","messageId":"133","endLine":16,"endColumn":6},{"ruleId":"130","severity":1,"message":"160","line":17,"column":3,"nodeType":"132","messageId":"133","endLine":17,"endColumn":7},{"ruleId":"130","severity":1,"message":"161","line":18,"column":3,"nodeType":"132","messageId":"133","endLine":18,"endColumn":11},{"ruleId":"130","severity":1,"message":"162","line":19,"column":3,"nodeType":"132","messageId":"133","endLine":19,"endColumn":16},{"ruleId":"130","severity":1,"message":"163","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"164","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":34},{"ruleId":"130","severity":1,"message":"165","line":9,"column":11,"nodeType":"132","messageId":"133","endLine":9,"endColumn":17},{"ruleId":"153","severity":1,"message":"166","line":29,"column":3,"nodeType":"155","messageId":"156","endLine":29,"endColumn":18},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'TextareaAutosize' is defined but never used.","'makeStyles' is defined but never used.","'FormHelperText' is defined but never used.","'Divider' is defined but never used.","'ButtonGroup' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'AddCommentOutlinedIcon' is defined but never used.","'dispatch' is assigned a value but never used.",["167"],["168"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'Grow' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useMediaQuery' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'styles' is assigned a value but never used.","Duplicate key 'drawerContainer'.","no-global-assign","no-unsafe-negation"]